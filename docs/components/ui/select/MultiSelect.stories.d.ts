import { Meta } from '@storybook/react';
import { MultiSelect } from './MultiSelect';
import * as React from 'react';
declare const _default: Meta<typeof MultiSelect>;
export default _default;
export declare const Default: import('@storybook/core/csf').AnnotatedStoryFn<import('@storybook/react').ReactRenderer, import('..').InputControlProps & {
    label: string;
    name?: string;
    placeholder?: string;
    noOptionsMessage?: React.ComponentProps<typeof import('react-select').default>["noOptionsMessage"];
    options: import('./select.types').SelectOption<string | number>[];
    value?: import('./select.types').SelectOption<string | number>[] | undefined;
    onChange?: ((newOptions: import('./select.types').SelectOption<string | number>[]) => void) | undefined;
    required?: boolean;
    defaultValue?: (string | number)[] | undefined;
    selectAllDisabled?: boolean;
    valueTheme?: import('..').ChipTheme;
}>;
export declare const Selected: import('@storybook/core/csf').AnnotatedStoryFn<import('@storybook/react').ReactRenderer, import('..').InputControlProps & {
    label: string;
    name?: string;
    placeholder?: string;
    noOptionsMessage?: React.ComponentProps<typeof import('react-select').default>["noOptionsMessage"];
    options: import('./select.types').SelectOption<string | number>[];
    value?: import('./select.types').SelectOption<string | number>[] | undefined;
    onChange?: ((newOptions: import('./select.types').SelectOption<string | number>[]) => void) | undefined;
    required?: boolean;
    defaultValue?: (string | number)[] | undefined;
    selectAllDisabled?: boolean;
    valueTheme?: import('..').ChipTheme;
}>;
export declare const Required: import('@storybook/core/csf').AnnotatedStoryFn<import('@storybook/react').ReactRenderer, import('..').InputControlProps & {
    label: string;
    name?: string;
    placeholder?: string;
    noOptionsMessage?: React.ComponentProps<typeof import('react-select').default>["noOptionsMessage"];
    options: import('./select.types').SelectOption<string | number>[];
    value?: import('./select.types').SelectOption<string | number>[] | undefined;
    onChange?: ((newOptions: import('./select.types').SelectOption<string | number>[]) => void) | undefined;
    required?: boolean;
    defaultValue?: (string | number)[] | undefined;
    selectAllDisabled?: boolean;
    valueTheme?: import('..').ChipTheme;
}>;
export declare const Disabled: import('@storybook/core/csf').AnnotatedStoryFn<import('@storybook/react').ReactRenderer, import('..').InputControlProps & {
    label: string;
    name?: string;
    placeholder?: string;
    noOptionsMessage?: React.ComponentProps<typeof import('react-select').default>["noOptionsMessage"];
    options: import('./select.types').SelectOption<string | number>[];
    value?: import('./select.types').SelectOption<string | number>[] | undefined;
    onChange?: ((newOptions: import('./select.types').SelectOption<string | number>[]) => void) | undefined;
    required?: boolean;
    defaultValue?: (string | number)[] | undefined;
    selectAllDisabled?: boolean;
    valueTheme?: import('..').ChipTheme;
}>;
export declare const Success: import('@storybook/core/csf').AnnotatedStoryFn<import('@storybook/react').ReactRenderer, import('..').InputControlProps & {
    label: string;
    name?: string;
    placeholder?: string;
    noOptionsMessage?: React.ComponentProps<typeof import('react-select').default>["noOptionsMessage"];
    options: import('./select.types').SelectOption<string | number>[];
    value?: import('./select.types').SelectOption<string | number>[] | undefined;
    onChange?: ((newOptions: import('./select.types').SelectOption<string | number>[]) => void) | undefined;
    required?: boolean;
    defaultValue?: (string | number)[] | undefined;
    selectAllDisabled?: boolean;
    valueTheme?: import('..').ChipTheme;
}>;
export declare const Danger: import('@storybook/core/csf').AnnotatedStoryFn<import('@storybook/react').ReactRenderer, import('..').InputControlProps & {
    label: string;
    name?: string;
    placeholder?: string;
    noOptionsMessage?: React.ComponentProps<typeof import('react-select').default>["noOptionsMessage"];
    options: import('./select.types').SelectOption<string | number>[];
    value?: import('./select.types').SelectOption<string | number>[] | undefined;
    onChange?: ((newOptions: import('./select.types').SelectOption<string | number>[]) => void) | undefined;
    required?: boolean;
    defaultValue?: (string | number)[] | undefined;
    selectAllDisabled?: boolean;
    valueTheme?: import('..').ChipTheme;
}>;
export declare const Theme: import('@storybook/core/csf').AnnotatedStoryFn<import('@storybook/react').ReactRenderer, import('..').InputControlProps & {
    label: string;
    name?: string;
    placeholder?: string;
    noOptionsMessage?: React.ComponentProps<typeof import('react-select').default>["noOptionsMessage"];
    options: import('./select.types').SelectOption<string | number>[];
    value?: import('./select.types').SelectOption<string | number>[] | undefined;
    onChange?: ((newOptions: import('./select.types').SelectOption<string | number>[]) => void) | undefined;
    required?: boolean;
    defaultValue?: (string | number)[] | undefined;
    selectAllDisabled?: boolean;
    valueTheme?: import('..').ChipTheme;
}>;
