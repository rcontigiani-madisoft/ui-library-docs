export declare function arrayAddOrRemove<T, K>(array: T[], item: T, keySelector?: (item: T) => K): T[];
export declare function arrayDelete<T, K>(array: T[], item: T, keySelector?: (item: T) => K): T[];
export declare function arrayAddUnique<T, K>(array: T[], item: T, keySelector?: (item: T) => K): T[];
export declare function arrayUpdate<T, K>(array: T[], item: T, keySelector?: (item: T) => K): T[];
export declare function arrayMoveToIndex<T>(array: T[], srcIndex: number, destIndex: number): T[];
export declare function arrayToDictionary<T, K extends string | number | symbol>(array: T[], keySelector: (item: T) => K): Record<K, T>;
export declare function arrayPush<T>(array: T[], ...item: T[]): T[];
export declare function range(length: number, startAt?: number): Array<number>;
export declare function arrayOf<T>(length: number, factory: (index: number) => T): T[];
export declare function arrayEquals<T>(array1: Array<T>, array2: Array<T>): boolean;
export declare function arrayEquals(array1: any, array2: any): boolean;
export declare function arrayChunk<T>(array: T[], chunkSize?: number): T[][];
export declare function flatten<A, D extends number = 1>(arr: A, d?: D): FlatArray<A, D>[];
