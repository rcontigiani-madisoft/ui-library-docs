import{j as m}from"./jsx-runtime-D_zvdyIk.js";import{M as i}from"./MonthSelectionWidget-D8nJJ0Zg.js";import{r as n}from"./index-DatCARk7.js";import"./date-DLO9q3mC.js";import"./string-BWSckzgf.js";import"./MenuList-DwIza7ud.js";import"./styled-components.browser.esm-DD6bt04G.js";import"./index-RHVwCB2K.js";import"./index-C9zM6nuj.js";import"./usePopoverPosition-DScRzE65.js";import"./functions-DAFblV6k.js";import"./popover.module-_MiSh5dU.js";import"./MonthPicker-D89dfM91.js";import"./DateHandle-BqCLvfPI.js";import"./Button-bb1s2N95.js";import"./Flex-DwwaOy33.js";import"./isNewDesignEnabled-CECVVFcR.js";import"./Icon-BDJ5phNo.js";import"./calendar-empty-V1By7M1a.js";const O={title:"Date & Time/Month Selection Widget",component:i},p=()=>{const[s,a]=n.useState(new Date);return m.jsx(i,{selected:s,onSelect:a})},t=p.bind({});t.args={};var e,o,r;t.parameters={...t.parameters,docs:{...(e=t.parameters)==null?void 0:e.docs,source:{originalSource:`() => {
  const [date, setDate] = React.useState(new Date());
  return <MonthSelectionWidget selected={date} onSelect={setDate} />;
}`,...(r=(o=t.parameters)==null?void 0:o.docs)==null?void 0:r.source}}};const k=["Default"];export{t as Default,k as __namedExportsOrder,O as default};
